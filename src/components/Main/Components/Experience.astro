---
import { getCollection } from "astro:content";

import Encabezado from "@/utils/Encabezado.astro";
import ExperienceType from "@/components/Main/Components/Experience/Experience-Type.astro";
import SectionScheme from "@/utils/Section-Scheme.astro";

import { formatYears } from "@/assets/js/Format-Time";
import { fetchRepos } from "@/api/acces_api";

import ExperienceIcon from "@/icons/experience.astro";

const developer = await fetchRepos().then((repos) => {
  return repos.map((res: any) => {
    const startDate = res.created_at;
    const endDate = res.pushed_at || null;

    const date = formatYears(startDate, endDate);

    return {
      title: res.name || "Título no disponible",
      date: date,
      description: res.description || "Descripción no disponible",
      download: res.html_url || "URL no disponible",
      badge: "latest " + res.language || "Sin destacados",
    };
  });
});

const experiences = await getCollection("experiences");
const atteClient = experiences.filter(
  ({ data }: any) => data.type === "AtteClient"
);
const technical = experiences.filter(
  ({ data }: any) => data.type === "Technical"
);

const EXPERIENCES = [
  {
    title: "Como desarrollador:",
    color: "green",
    items: developer,
  },
  {
    title: "En atención al cliente:",
    color: "yellow",
    items: atteClient.map(({ data }: any) => ({
      title: data.title,
      date: data.date,
      description: data.description,
      download: data.download || "",
      badge: data.badge,
    })),
  },
  {
    title: "Como técnico ensamblador:",
    color: "purple",
    items: technical.map(({ data }: any) => ({
      title: data.title,
      date: data.date,
      description: data.description,
      download: data.download || "",
      badge: data.badge,
    })),
  },
];
---

<SectionScheme id="experiencia" className="gap-10 mb-40">
  <Encabezado title="Experiencia Laboral">
    <ExperienceIcon class="size-7 xl:size-9" />
  </Encabezado>
  <div
    class="w-full grid grid-cols-1 grid-rows-auto lg:grid-cols-2 lg:grid-rows-2 gap-5"
  >
    {
      EXPERIENCES.map(({ title, color, items }, index) => (
        <ExperienceType
          title={title}
          color={color}
          experiences={items}
          class={`p-4 ${index === 0 ? "row-span-2" : "row-span-1"}`}
        />
      ))
    }
  </div>
</SectionScheme>
